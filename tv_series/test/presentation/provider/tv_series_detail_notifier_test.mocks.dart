// Mocks generated by Mockito 5.4.4 from annotations
// in tv_series/test/presentation/provider/tv_series_detail_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:core/core.dart' as _i7;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_series/domain/entities/tv_series.dart' as _i10;
import 'package:tv_series/domain/entities/tv_series_detail.dart' as _i8;
import 'package:tv_series/domain/repositories/tv_series_repository.dart' as _i2;
import 'package:tv_series/domain/usecases/get_tv_series_detail.dart' as _i5;
import 'package:tv_series/domain/usecases/get_tv_series_recommendations.dart'
    as _i9;
import 'package:watchlist/domain/entities/watchlist.dart' as _i13;
import 'package:watchlist/domain/repositories/watchlist_repository.dart' as _i4;
import 'package:watchlist/domain/usecases/get_watchlist_status.dart' as _i11;
import 'package:watchlist/domain/usecases/remove_watchlist.dart' as _i14;
import 'package:watchlist/domain/usecases/save_watchlist.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvSeriesRepository_0 extends _i1.SmartFake
    implements _i2.TvSeriesRepository {
  _FakeTvSeriesRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchlistRepository_2 extends _i1.SmartFake
    implements _i4.WatchlistRepository {
  _FakeWatchlistRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetTvSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesDetail extends _i1.Mock implements _i5.GetTvSeriesDetail {
  MockGetTvSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvSeriesRepository get tvSeriesRepository => (super.noSuchMethod(
        Invocation.getter(#tvSeriesRepository),
        returnValue: _FakeTvSeriesRepository_0(
          this,
          Invocation.getter(#tvSeriesRepository),
        ),
      ) as _i2.TvSeriesRepository);

  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.TvSeriesDetail>> call(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [id],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, _i8.TvSeriesDetail>>.value(
                _FakeEither_1<_i7.Failure, _i8.TvSeriesDetail>(
          this,
          Invocation.method(
            #call,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, _i8.TvSeriesDetail>>);
}

/// A class which mocks [GetTvSeriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesRecommendations extends _i1.Mock
    implements _i9.GetTvSeriesRecommendations {
  MockGetTvSeriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvSeriesRepository get tvSeriesRepository => (super.noSuchMethod(
        Invocation.getter(#tvSeriesRepository),
        returnValue: _FakeTvSeriesRepository_0(
          this,
          Invocation.getter(#tvSeriesRepository),
        ),
      ) as _i2.TvSeriesRepository);

  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i10.TvSeries>>> call(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [id],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i10.TvSeries>>>.value(
                _FakeEither_1<_i7.Failure, List<_i10.TvSeries>>(
          this,
          Invocation.method(
            #call,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i10.TvSeries>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i11.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get watchlistRepository => (super.noSuchMethod(
        Invocation.getter(#watchlistRepository),
        returnValue: _FakeWatchlistRepository_2(
          this,
          Invocation.getter(#watchlistRepository),
        ),
      ) as _i4.WatchlistRepository);

  @override
  _i6.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i12.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i13.Watchlist? watchlist) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [watchlist],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
            _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [watchlist],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i14.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get watchlistRepository => (super.noSuchMethod(
        Invocation.getter(#watchlistRepository),
        returnValue: _FakeWatchlistRepository_2(
          this,
          Invocation.getter(#watchlistRepository),
        ),
      ) as _i4.WatchlistRepository);

  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
            _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, String>>);
}
