// Mocks generated by Mockito 5.4.4 from annotations
// in tv_series/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i14;
import 'dart:typed_data' as _i16;

import 'package:core/core.dart' as _i9;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;
import 'package:tv_series/data/models/tv_detail_response.dart' as _i4;
import 'package:tv_series/data/models/tv_response.dart' as _i3;
import 'package:tv_series/data/models/tv_season_response.dart' as _i5;
import 'package:tv_series/data/sources/tv_series_remote_data_source.dart'
    as _i13;
import 'package:tv_series/domain/entities/episode.dart' as _i12;
import 'package:tv_series/domain/entities/tv_series.dart' as _i10;
import 'package:tv_series/domain/entities/tv_series_detail.dart' as _i11;
import 'package:tv_series/domain/repositories/tv_series_repository.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvResponse_1 extends _i1.SmartFake implements _i3.TvResponse {
  _FakeTvResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetailResponse_2 extends _i1.SmartFake
    implements _i4.TvDetailResponse {
  _FakeTvDetailResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasonResponse_3 extends _i1.SmartFake
    implements _i5.SeasonResponse {
  _FakeSeasonResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4 extends _i1.SmartFake implements _i6.Response {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_5 extends _i1.SmartFake
    implements _i6.StreamedResponse {
  _FakeStreamedResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvSeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRepository extends _i1.Mock
    implements _i7.TvSeriesRepository {
  MockTvSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>
      getNowPlayingTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingTvSeries,
              [],
            ),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>.value(
                    _FakeEither_0<_i9.Failure, List<_i10.TvSeries>>(
              this,
              Invocation.method(
                #getNowPlayingTvSeries,
                [],
              ),
            )),
          ) as _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>
      getPopularTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getPopularTvSeries,
              [],
            ),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>.value(
                    _FakeEither_0<_i9.Failure, List<_i10.TvSeries>>(
              this,
              Invocation.method(
                #getPopularTvSeries,
                [],
              ),
            )),
          ) as _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>
      getTopRatedTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getTopRatedTvSeries,
              [],
            ),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>.value(
                    _FakeEither_0<_i9.Failure, List<_i10.TvSeries>>(
              this,
              Invocation.method(
                #getTopRatedTvSeries,
                [],
              ),
            )),
          ) as _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.TvSeriesDetail>> getTvSeriesDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesDetail,
          [id],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i9.Failure, _i11.TvSeriesDetail>>.value(
                _FakeEither_0<_i9.Failure, _i11.TvSeriesDetail>(
          this,
          Invocation.method(
            #getTvSeriesDetail,
            [id],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i9.Failure, _i11.TvSeriesDetail>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>
      getTvSeriesRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getTvSeriesRecommendations,
              [id],
            ),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>.value(
                    _FakeEither_0<_i9.Failure, List<_i10.TvSeries>>(
              this,
              Invocation.method(
                #getTvSeriesRecommendations,
                [id],
              ),
            )),
          ) as _i8.Future<_i2.Either<_i9.Failure, List<_i10.TvSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Episode>>> getTvSeriesSeason(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesSeason,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i8.Future<_i2.Either<_i9.Failure, List<_i12.Episode>>>.value(
                _FakeEither_0<_i9.Failure, List<_i12.Episode>>(
          this,
          Invocation.method(
            #getTvSeriesSeason,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Episode>>>);
}

/// A class which mocks [TvSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRemoteDataSource extends _i1.Mock
    implements _i13.TvSeriesRemoteDataSource {
  MockTvSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i3.TvResponse> getNowPlayingTvSeries() => (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTvSeries,
          [],
        ),
        returnValue: _i8.Future<_i3.TvResponse>.value(_FakeTvResponse_1(
          this,
          Invocation.method(
            #getNowPlayingTvSeries,
            [],
          ),
        )),
      ) as _i8.Future<_i3.TvResponse>);

  @override
  _i8.Future<_i3.TvResponse> getPopularTvSeries() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTvSeries,
          [],
        ),
        returnValue: _i8.Future<_i3.TvResponse>.value(_FakeTvResponse_1(
          this,
          Invocation.method(
            #getPopularTvSeries,
            [],
          ),
        )),
      ) as _i8.Future<_i3.TvResponse>);

  @override
  _i8.Future<_i3.TvResponse> getTopRatedTvSeries() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvSeries,
          [],
        ),
        returnValue: _i8.Future<_i3.TvResponse>.value(_FakeTvResponse_1(
          this,
          Invocation.method(
            #getTopRatedTvSeries,
            [],
          ),
        )),
      ) as _i8.Future<_i3.TvResponse>);

  @override
  _i8.Future<_i4.TvDetailResponse> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesDetail,
          [id],
        ),
        returnValue:
            _i8.Future<_i4.TvDetailResponse>.value(_FakeTvDetailResponse_2(
          this,
          Invocation.method(
            #getTvSeriesDetail,
            [id],
          ),
        )),
      ) as _i8.Future<_i4.TvDetailResponse>);

  @override
  _i8.Future<_i3.TvResponse> getTvSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesRecommendations,
          [id],
        ),
        returnValue: _i8.Future<_i3.TvResponse>.value(_FakeTvResponse_1(
          this,
          Invocation.method(
            #getTvSeriesRecommendations,
            [id],
          ),
        )),
      ) as _i8.Future<_i3.TvResponse>);

  @override
  _i8.Future<_i5.SeasonResponse> getTvSeriesSeason(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesSeason,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue: _i8.Future<_i5.SeasonResponse>.value(_FakeSeasonResponse_3(
          this,
          Invocation.method(
            #getTvSeriesSeason,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i8.Future<_i5.SeasonResponse>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i6.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i6.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<_i6.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);

  @override
  _i8.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<_i16.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i16.Uint8List>.value(_i16.Uint8List(0)),
      ) as _i8.Future<_i16.Uint8List>);

  @override
  _i8.Future<_i6.StreamedResponse> send(_i6.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i8.Future<_i6.StreamedResponse>.value(_FakeStreamedResponse_5(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i8.Future<_i6.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
