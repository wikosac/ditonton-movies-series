// Mocks generated by Mockito 5.4.4 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:convert' as _i30;
import 'dart:typed_data' as _i31;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/core/errors/failure.dart' as _i10;
import 'package:ditonton/movies/data/models/movie_detail_model.dart' as _i3;
import 'package:ditonton/movies/data/models/movie_model.dart' as _i14;
import 'package:ditonton/movies/data/sources/movie_remote_data_source.dart'
    as _i13;
import 'package:ditonton/movies/domain/entities/movie.dart' as _i11;
import 'package:ditonton/movies/domain/entities/movie_detail.dart' as _i12;
import 'package:ditonton/movies/domain/repositories/movie_repository.dart'
    as _i8;
import 'package:ditonton/search/data/sources/search_data_source.dart' as _i17;
import 'package:ditonton/search/domain/entities/search.dart' as _i16;
import 'package:ditonton/search/domain/repositories/search_repository.dart'
    as _i15;
import 'package:ditonton/tv_series/data/models/tv_detail_response.dart' as _i5;
import 'package:ditonton/tv_series/data/models/tv_response.dart' as _i4;
import 'package:ditonton/tv_series/data/models/tv_season_response.dart' as _i6;
import 'package:ditonton/tv_series/data/sources/tv_series_remote_data_source.dart'
    as _i22;
import 'package:ditonton/tv_series/domain/entities/episode.dart' as _i21;
import 'package:ditonton/tv_series/domain/entities/tv_series.dart' as _i19;
import 'package:ditonton/tv_series/domain/entities/tv_series_detail.dart'
    as _i20;
import 'package:ditonton/tv_series/domain/repositories/tv_series_repository.dart'
    as _i18;
import 'package:ditonton/watchlist/data/models/watchlist_table.dart' as _i26;
import 'package:ditonton/watchlist/data/sources/database_helper.dart' as _i28;
import 'package:ditonton/watchlist/data/sources/watchlist_data_source.dart'
    as _i25;
import 'package:ditonton/watchlist/domain/entities/watchlist.dart' as _i24;
import 'package:ditonton/watchlist/domain/repositories/watchlist_repository.dart'
    as _i23;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i27;
import 'package:sqflite/sqflite.dart' as _i29;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvResponse_2 extends _i1.SmartFake implements _i4.TvResponse {
  _FakeTvResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetailResponse_3 extends _i1.SmartFake
    implements _i5.TvDetailResponse {
  _FakeTvDetailResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasonResponse_4 extends _i1.SmartFake
    implements _i6.SeasonResponse {
  _FakeSeasonResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_5 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_6 extends _i1.SmartFake
    implements _i7.StreamedResponse {
  _FakeStreamedResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i8.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>
      getNowPlayingMovies() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingMovies,
              [],
            ),
            returnValue:
                _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                    _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
              this,
              Invocation.method(
                #getNowPlayingMovies,
                [],
              ),
            )),
          ) as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, _i12.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i12.MovieDetail>>.value(
                _FakeEither_0<_i10.Failure, _i12.MovieDetail>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i12.MovieDetail>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>
      getMovieRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getMovieRecommendations,
              [id],
            ),
            returnValue:
                _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>.value(
                    _FakeEither_0<_i10.Failure, List<_i11.Movie>>(
              this,
              Invocation.method(
                #getMovieRecommendations,
                [id],
              ),
            )),
          ) as _i9.Future<_i2.Either<_i10.Failure, List<_i11.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i13.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<List<_i14.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue:
            _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i9.Future<List<_i14.MovieModel>>);

  @override
  _i9.Future<List<_i14.MovieModel>> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i9.Future<List<_i14.MovieModel>>);

  @override
  _i9.Future<List<_i14.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i9.Future<List<_i14.MovieModel>>);

  @override
  _i9.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue: _i9.Future<_i3.MovieDetailResponse>.value(
            _FakeMovieDetailResponse_1(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i3.MovieDetailResponse>);

  @override
  _i9.Future<List<_i14.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue:
            _i9.Future<List<_i14.MovieModel>>.value(<_i14.MovieModel>[]),
      ) as _i9.Future<List<_i14.MovieModel>>);
}

/// A class which mocks [SearchRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchRepository extends _i1.Mock implements _i15.SearchRepository {
  MockSearchRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i16.Search>>> search(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, List<_i16.Search>>>.value(
                _FakeEither_0<_i10.Failure, List<_i16.Search>>(
          this,
          Invocation.method(
            #search,
            [query],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, List<_i16.Search>>>);
}

/// A class which mocks [SearchDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchDataSource extends _i1.Mock implements _i17.SearchDataSource {
  MockSearchDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<List<_i16.Search>> search(String? query) => (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue: _i9.Future<List<_i16.Search>>.value(<_i16.Search>[]),
      ) as _i9.Future<List<_i16.Search>>);
}

/// A class which mocks [TvSeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRepository extends _i1.Mock
    implements _i18.TvSeriesRepository {
  MockTvSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>
      getNowPlayingTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingTvSeries,
              [],
            ),
            returnValue:
                _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_0<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getNowPlayingTvSeries,
                [],
              ),
            )),
          ) as _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>
      getPopularTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getPopularTvSeries,
              [],
            ),
            returnValue:
                _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_0<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getPopularTvSeries,
                [],
              ),
            )),
          ) as _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>
      getTopRatedTvSeries() => (super.noSuchMethod(
            Invocation.method(
              #getTopRatedTvSeries,
              [],
            ),
            returnValue:
                _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_0<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getTopRatedTvSeries,
                [],
              ),
            )),
          ) as _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, _i20.TvSeriesDetail>> getTvSeriesDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesDetail,
          [id],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, _i20.TvSeriesDetail>>.value(
                _FakeEither_0<_i10.Failure, _i20.TvSeriesDetail>(
          this,
          Invocation.method(
            #getTvSeriesDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, _i20.TvSeriesDetail>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>
      getTvSeriesRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getTvSeriesRecommendations,
              [id],
            ),
            returnValue:
                _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>.value(
                    _FakeEither_0<_i10.Failure, List<_i19.TvSeries>>(
              this,
              Invocation.method(
                #getTvSeriesRecommendations,
                [id],
              ),
            )),
          ) as _i9.Future<_i2.Either<_i10.Failure, List<_i19.TvSeries>>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i21.Episode>>> getTvSeriesSeason(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesSeason,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, List<_i21.Episode>>>.value(
                _FakeEither_0<_i10.Failure, List<_i21.Episode>>(
          this,
          Invocation.method(
            #getTvSeriesSeason,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, List<_i21.Episode>>>);
}

/// A class which mocks [TvSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRemoteDataSource extends _i1.Mock
    implements _i22.TvSeriesRemoteDataSource {
  MockTvSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i4.TvResponse> getNowPlayingTvSeries() => (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingTvSeries,
          [],
        ),
        returnValue: _i9.Future<_i4.TvResponse>.value(_FakeTvResponse_2(
          this,
          Invocation.method(
            #getNowPlayingTvSeries,
            [],
          ),
        )),
      ) as _i9.Future<_i4.TvResponse>);

  @override
  _i9.Future<_i4.TvResponse> getPopularTvSeries() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTvSeries,
          [],
        ),
        returnValue: _i9.Future<_i4.TvResponse>.value(_FakeTvResponse_2(
          this,
          Invocation.method(
            #getPopularTvSeries,
            [],
          ),
        )),
      ) as _i9.Future<_i4.TvResponse>);

  @override
  _i9.Future<_i4.TvResponse> getTopRatedTvSeries() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvSeries,
          [],
        ),
        returnValue: _i9.Future<_i4.TvResponse>.value(_FakeTvResponse_2(
          this,
          Invocation.method(
            #getTopRatedTvSeries,
            [],
          ),
        )),
      ) as _i9.Future<_i4.TvResponse>);

  @override
  _i9.Future<_i5.TvDetailResponse> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesDetail,
          [id],
        ),
        returnValue:
            _i9.Future<_i5.TvDetailResponse>.value(_FakeTvDetailResponse_3(
          this,
          Invocation.method(
            #getTvSeriesDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i5.TvDetailResponse>);

  @override
  _i9.Future<_i4.TvResponse> getTvSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesRecommendations,
          [id],
        ),
        returnValue: _i9.Future<_i4.TvResponse>.value(_FakeTvResponse_2(
          this,
          Invocation.method(
            #getTvSeriesRecommendations,
            [id],
          ),
        )),
      ) as _i9.Future<_i4.TvResponse>);

  @override
  _i9.Future<_i6.SeasonResponse> getTvSeriesSeason(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeriesSeason,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue: _i9.Future<_i6.SeasonResponse>.value(_FakeSeasonResponse_4(
          this,
          Invocation.method(
            #getTvSeriesSeason,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i9.Future<_i6.SeasonResponse>);
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i23.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i10.Failure, String>> saveWatchlist(
          _i24.Watchlist? watchlist) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [watchlist],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, String>>.value(
            _FakeEither_0<_i10.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [watchlist],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, String>>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, String>> removeWatchlist(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [id],
        ),
        returnValue: _i9.Future<_i2.Either<_i10.Failure, String>>.value(
            _FakeEither_0<_i10.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [id],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, String>>);

  @override
  _i9.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i2.Either<_i10.Failure, List<_i24.Watchlist>>> getWatchlist() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i10.Failure, List<_i24.Watchlist>>>.value(
                _FakeEither_0<_i10.Failure, List<_i24.Watchlist>>(
          this,
          Invocation.method(
            #getWatchlist,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i10.Failure, List<_i24.Watchlist>>>);
}

/// A class which mocks [WatchlistDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistDataSource extends _i1.Mock
    implements _i25.WatchlistDataSource {
  MockWatchlistDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<String> insertWatchlist(_i26.WatchlistTable? watchlist) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [watchlist],
        ),
        returnValue: _i9.Future<String>.value(_i27.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlist,
            [watchlist],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> removeWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [id],
        ),
        returnValue: _i9.Future<String>.value(_i27.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [id],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<_i26.WatchlistTable?> getWatchlistById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistById,
          [id],
        ),
        returnValue: _i9.Future<_i26.WatchlistTable?>.value(),
      ) as _i9.Future<_i26.WatchlistTable?>);

  @override
  _i9.Future<List<_i26.WatchlistTable>> getWatchlist() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [],
        ),
        returnValue: _i9.Future<List<_i26.WatchlistTable>>.value(
            <_i26.WatchlistTable>[]),
      ) as _i9.Future<List<_i26.WatchlistTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i28.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i29.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i9.Future<_i29.Database?>.value(),
      ) as _i9.Future<_i29.Database?>);

  @override
  _i9.Future<int> insertWatchlist(_i26.WatchlistTable? watchlistTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [watchlistTable],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);

  @override
  _i9.Future<int> removeWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [id],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);

  @override
  _i9.Future<Map<String, dynamic>?> getWatchlistById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistById,
          [id],
        ),
        returnValue: _i9.Future<Map<String, dynamic>?>.value(),
      ) as _i9.Future<Map<String, dynamic>?>);

  @override
  _i9.Future<List<Map<String, dynamic>>> getWatchlist() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [],
        ),
        returnValue: _i9.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i9.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i7.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<_i7.Response>);

  @override
  _i9.Future<_i7.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<_i7.Response>);

  @override
  _i9.Future<_i7.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i30.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);

  @override
  _i9.Future<_i7.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i30.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);

  @override
  _i9.Future<_i7.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i30.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);

  @override
  _i9.Future<_i7.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i30.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);

  @override
  _i9.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<String>.value(_i27.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<_i31.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i31.Uint8List>.value(_i31.Uint8List(0)),
      ) as _i9.Future<_i31.Uint8List>);

  @override
  _i9.Future<_i7.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i9.Future<_i7.StreamedResponse>.value(_FakeStreamedResponse_6(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i9.Future<_i7.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
